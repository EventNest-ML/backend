services:
  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "9090:8000"
    env_file:
      - .env
    depends_on:
      - postgresdb
    networks:
      - djangonet

  postgresdb:
    image: postgres:17
    ports:
      - 5434:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DBNAME}
    networks:
      - djangonet

  nginx:
    restart: always
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    ports:
      - 8080:80
    networks:
      - djangonet

  redis:
    image: redis:5-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - djangonet
    
  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgresdb
    networks:
      - djangonet

  celery_beat:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celerybeat
    volumes:
      - .:/app
      - celerybeat_data:/app/celerybeat
    env_file:
      - .env
    depends_on:
      - redis
      - postgresdb
      - api
    networks:
      - djangonet
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 5556:5555
    depends_on:
      - redis
      - postgresdb
    networks:
      - djangonet

networks:
  djangonet:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  celerybeat_data:
  redis_data: